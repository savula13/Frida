// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6016.Frida.commands;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc6016.Frida.Robot;
import org.usfirst.frc6016.Frida.RobotMap;

/**
 *
 */
public class Turn extends Command {
	double setpoint = 90;
	int count=0;
	
	private double m_angle;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Turn(double angle) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    	
    	m_angle = angle;
    	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	Robot.drivetrain.reset();
    	RobotMap.drivetrainDifferentialDrive1.setSafetyEnabled(false);
    	count=0;
    	System.out.println("Gyro Heading" + RobotMap.navX.getYaw());
    	return;
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	count++;
    	Robot.drivetrain.turn(Robot.drivetrain.calcPID2(setpoint));
    	if(count%10==0){
    		System.out.println("Gyro: " + RobotMap.navX.getYaw());
    	}
    	return;
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
    	if((Math.abs(RobotMap.navX.getYaw() - m_angle)) < Robot.drivetrain.accuracy){
    		System.out.println("Gyro Heading isFinished" + RobotMap.navX.getYaw());
          	Robot.drivetrain.stop();
          	return true;
          	
          } else {
          	return false;
          }
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Timer.delay(1);
    	System.out.println("Gyro Heading" + RobotMap.navX.getYaw());
    	return;
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    	return;
    }
}
